{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth-guard/auth-guard.service.ts","webpack:///src/app/_helpers/http-interceptors/auth-interceptor.ts","webpack:///src/app/_helpers/http-interceptors/error.interceptor.ts","webpack:///src/app/_helpers/http-interceptors/index.ts","webpack:///src/app/_helpers/http-interceptors/logging-interceptor.ts","webpack:///src/app/_models/address.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/auth/auth.service.ts","webpack:///src/app/_services/edit-user/edit-user.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/signup/signup.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/dashboard/dashboard.component.ts","webpack:///src/app/common/dashboard/dashboard.component.html","webpack:///src/app/common/dashboard/dashboard.module.ts","webpack:///src/app/common/edit-user/edit-user.component.ts","webpack:///src/app/common/edit-user/edit-user.component.html","webpack:///src/app/common/edit-user/edit-user.module.ts","webpack:///src/app/common/login/login-routing.module.ts","webpack:///src/app/common/login/login.component.ts","webpack:///src/app/common/login/login.component.html","webpack:///src/app/common/login/login.module.ts","webpack:///src/app/common/signup/signup.component.ts","webpack:///src/app/common/signup/signup.component.html","webpack:///src/app/common/signup/signup.module.ts","webpack:///src/app/layout/footer-only-layout/footer-only-layout.component.ts","webpack:///src/app/layout/footer-only-layout/footer-only-layout.component.html","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/header/header.component.ts","webpack:///src/app/layout/header/header.component.html","webpack:///src/app/layout/layout-routing.module.ts","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/main-layout/main-layout.component.ts","webpack:///src/app/layout/main-layout/main-layout.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authService","route","state","isLoggedIn","navigate","queryParams","returnUrl","url","AuthInterceptor","request","next","authToken","getAuthorizationToken","clone","setHeaders","Authorization","handle","ErrorInterceptor","auth","pipe","err","status","logout","location","reload","error","message","statusText","httpInterceptorProviders","provide","useClass","multi","LoggingInterceptor","started","Date","now","ok","event","elapsed","msg","method","urlWithParams","console","log","Address","obj","street","city","zip","User","name","email","password","phone","isAdmin","address","AuthService","httpClient","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","credentials","post","response","user","setItem","loginUser","stringify","handleError","removeItem","ErrorEvent","value","providedIn","EditUserService","http","user$","token","get","setUser","userDetails","patch","roles","includes","SignupService","map","result","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","DashboardComponent","_authService","routes","path","component","DashboardModule","forChild","EditUserComponent","editUserService","_location","states","person","me","subscribe","myForm","field","controls","dirty","startsWith","fieldName","split","update","invalidUserEdit","errorMessage","back","backClicked","EditUserModule","LoginRoutingModule","LoginComponent","submitted","login","invalidLogin","signIn","LoginModule","SignupComponent","signupService","save","invalidSignup","SignupModule","FooterOnlyLayoutComponent","FooterComponent","HeaderComponent","redirectTo","pathMatch","children","loadChildren","canActivate","LayoutRoutingModule","LayoutModule","MainLayoutComponent","environment","production","apiUrl","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthService } from '../../_services/auth/auth.service';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\nconstructor(protected router: Router, protected authService: AuthService) { }\n \n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isLoggedIn()) return true;\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\nimport { AuthService } from '../../_services/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // add auth header with jwt if user is logged in and request is to the api url\r\n    const authToken = this.authService.getAuthorizationToken();\r\n    //console.log(authToken)\r\n    const isLoggedIn = this.authService.isLoggedIn()\r\n    //console.log(isLoggedIn)\r\n    //const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    //console.log(request.url)\r\n    //console.log(environment.apiUrl)\r\n    //console.log(isApiUrl)\r\n    if (authToken && isLoggedIn) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${authToken}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { AuthService } from '../../_services/auth/auth.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(catchError(err => {\r\n      if (err.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        this.auth.logout();\r\n        location.reload(true);\r\n      }\r\n\r\n      const error = err.error.message || err.statusText;\r\n      return throwError(error);\r\n    }))\r\n  }\n}\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LoggingInterceptor } from './logging-interceptor';\r\nimport { AuthInterceptor } from './auth-interceptor'\r\nimport { ErrorInterceptor } from './error.interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n];\r\n","import { finalize, tap } from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const started = Date.now();\r\n    let ok: string;\r\n\r\n    // extend server response observable with logging\r\n    return next.handle(req)\r\n      .pipe(\r\n        tap(\r\n          // Succeeds when there is a response; ignore other events\r\n          event => ok = event instanceof HttpResponse ? 'succeeded' : '',\r\n          // Operation failed; error is an HttpErrorResponse\r\n          error => ok = 'failed'\r\n        ),\r\n        // Log when response observable either completes or errors\r\n        finalize(() => {\r\n          const elapsed = Date.now() - started;\r\n          const msg = `${req.method} \"${req.urlWithParams}\" ${ok} in ${elapsed} ms.`;\r\n          console.log(msg)\r\n          //this.authService.add(msg);\r\n        })\r\n      );\r\n  }\r\n}\r\n","export class Address {\n  street: string;\n  city: string;\n  state: string;\n  zip: string;\n\n  constructor(obj?: any) {\n    this.street = obj && obj.street || null;\n    this.city = obj && obj.city || null;\n    this.state = obj && obj.state || null;\n    this.zip = obj && obj.zip || null;\n  }\n}\n","export * from './user';\r\nexport * from './address';\r\n","import { Address } from './address';\r\n\n\nexport class User {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  password: string;\n  roles: string[];\n  isAdmin: boolean;\n  address: Address;\n\n  constructor(obj?: any) {\n    this.id = obj && obj.id || null;\n    this.name = obj && obj.name || null;\n    this.email = obj && obj.email || null;\n    this.password = obj && obj.password || null;\n    this.phone = obj && obj.phone || null;\n    this.isAdmin = true;\n    this.address = obj && obj.address || null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { tokenNotExpired, JwtHelper } from 'angular2-jwt';\nimport 'rxjs/add/operator/map';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { throwError, BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../../_models/user';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public loginUser: string\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\n\n  constructor(private httpClient: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  login(credentials) {\n    return this.httpClient.post('/api/v1/users/login', credentials)\r\n      .pipe(\r\n        map(response => {\n          //console.log(response)        \n\n          if (response && (response as any).user) {\n            localStorage.setItem('token', response['token']);\n\n            console.log((response as any).user)\n            this.loginUser = ((response as any).user as User).name\n            localStorage.setItem('loginUser', this.loginUser);\n\n            localStorage.setItem('currentUser', JSON.stringify((response as any).user));\r\n            this.currentUserSubject.next((response as any).user);\n            return true;\n          }\n          else return false;\n        }),\r\n      catchError(this.handleError)\r\n    );\n      \n  }\n\n  logout() {\n    return this.httpClient.post('/api/v1/users/logout','')\r\n      .pipe(\r\n        map(response => {\n\n            // remove user from local storage to log user out\n            localStorage.removeItem('token');\n            this.currentUser = null;\n\n          localStorage.removeItem('loginUser');\n          this.loginUser = null;\n            // remove user from local storage to log user out\r\n            localStorage.removeItem('currentUser');\r\n            this.currentUserSubject.next(null);\n            return true;\n          \n        }),\r\n        catchError(this.handleError)\r\n      );    \n  }\n\n  isLoggedIn() {\n    return tokenNotExpired('token');\n  }\n  getAuthorizationToken() {\n    return localStorage.getItem('token');\r\n  }\n  getLoginUserName() {\n    return localStorage.getItem('loginUser');\r\n  }\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, EMPTY, BehaviorSubject, throwError } from 'rxjs';\r\nimport { User } from '../../_models';\r\nimport { tap, pluck, catchError, map } from 'rxjs/operators';\r\n\n\ninterface AuthResponse {\n  token: string;\n  user: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditUserService {\n  private user$ = new BehaviorSubject<User | null>(null);\n\n  constructor(private http: HttpClient) { }\n\n  me(): Observable<User> {\n    const token: string | null = localStorage.getItem('token');\n\n    if (token === null) {\n      return EMPTY;\n    }\n\n    return this.http.get<User>('/api/v1/users/me').pipe(\n      tap((user) => {\r\n        this.setUser(user);\n        //console.log(user)\n      }),\n     // pluck('user')\n    );\n  }\n  update(userDetails) {\n    return this.http.patch('/api/v1/users/me', userDetails)\r\n      .pipe(\r\n        map(response => {\n          console.log(response)        \n\n          if (response && (response as any).user) {\n            \n            let loginUser = ((response as any).user as User).name\n            localStorage.setItem('loginUser', loginUser);\n\n            localStorage.setItem('currentUser', JSON.stringify((response as any).user));\r\n            \n            return true;\n          }\n          else return false;\n        }),\r\n        catchError(this.handleError)\r\n      );\n\n  }\n\n\n  setUser(user: User | null): void {\n    if (user) {\n      user.isAdmin = user.roles.includes('admin');\n    }\n\n    this.user$.next(user);   \n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","export * from './signup/signup.service';\r\nexport * from './auth/auth.service';\r\nexport * from './edit-user/edit-user.service';\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map'; \nimport { User } from '../../_models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  constructor(private http: HttpClient) { }\n\n  save(user: User) {\n    console.log(user)\n    //TODo: As of now set Admin role\n    user.roles = ['admin'];\n\n    return this.http.post('/api/v1/users/signup', user)\n      .map(response => {\n        let result = response\n        console.log(\"Sign Up End Point Response\" + response)\n        if (result) {\n          //localStorage.setItem('token', result.token);\n         \n\n          return true;\n        }\n        else return false;\n      });\n    //localStorage['person' + person.id] = JSON.stringify(person);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'food-store';\n}\n","<div class=\"container-fluid\">\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LayoutModule } from './layout/layout.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthService } from './_services/auth/auth.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthGuard } from './_helpers/auth-guard/auth-guard.service';\nimport { httpInterceptorProviders } from './_helpers/http-interceptors';\r\n\n@NgModule({\n  declarations: [\n    AppComponent    \n  ],\n  imports: [\n    BrowserModule,    \n    RouterModule.forRoot([]),\n    LayoutModule,\n    HttpClientModule,\n  ],\n  providers: [AuthService, AuthGuard, httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../_services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  //currentUser: any\n  constructor(private router: Router, private _authService: AuthService) {\n    \n  }\n\n  ngOnInit(): void {\n   // this.currentUser = this.authService.currentUser.name\n  }\n\n  \n}\n","<div class=\"card mt-4\">\r\n  <h4 class=\"card-header\">You're logged in with Angular 10 & JWT!!</h4>\r\n  <div class=\"card-body\">\r\n    <h6>Users from secure api end point</h6>\r\n    <div  class=\"spinner-border spinner-border-sm\"></div>\r\n    \r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes)\n    \n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { User, Address } from '../../_models';\r\nimport { EditUserService } from '../../_services';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  invalidUserEdit: boolean;\n  errorMessage: any\n  person: User\n  public states: String[] = ['Delhi', 'Mumbai', 'Kolkata', 'Bangalore'];\n\n  constructor(private router: Router, private editUserService: EditUserService, private _location: Location) { }\n\n  ngOnInit(): void {    \n    this.person = new User()\n    this.person.address = new Address()\n    //Call the service\n    this.editUserService.me()\n      .subscribe(result => {\n        console.log(result)\n        this.person = result;\n        this.person.password = '*******';\n      });\n  }\n\n  update(myForm: NgForm) {\r\n    //console.log(this.person)\r\n    //console.log(myForm)\r\n    //console.log(myForm.touched)\r\n\r\n    let userDetails = {};\r\n    userDetails['_id'] = this.person['_id']\r\n    \r\n    for (const field in myForm.controls) { // 'field' is a string\r\n      if (myForm.controls[field].dirty) {\r\n        console.log(field + '->' + myForm.controls[field].value);\r\n        if (field.startsWith('address')) {\r\n          let fieldName = field.split(\".\")[1]\r\n          if (userDetails['address']) {\r\n            userDetails['address'][fieldName] = myForm.controls[field].value;\r\n          } else {\r\n            userDetails['address'] = {};\r\n            userDetails['address'][fieldName] = myForm.controls[field].value;\r\n          }\r\n        } else {\r\n          userDetails[field] = myForm.controls[field].value;\r\n        }\r\n        \r\n      }\r\n        \r\n    }\r\n    \r\n    if (!myForm.controls.password.dirty) {\r\n      console.log('Password Not Updated!!')\r\n      this.person.password = null;\r\n    }\r\n    //console.log(this.person)   \r\n    console.log(userDetails)\r\n\r\n    this.editUserService.update(userDetails)\n      .subscribe(result => {        \n          this.invalidUserEdit = false;\r\n          this.errorMessage = null;\n          //this.router.navigate(['/dashboard']);\r\n          this._location.back();       \n      },\n        error => {\r\n          this.invalidUserEdit = true;\r\n          this.errorMessage=error;\r\n\r\n        } // error path\r\n      );\r\n  }\n  backClicked() {\r\n    this._location.back();\r\n  }\n  \n}\n","<div class=\"card mt-4\">\r\n  <h4 class=\"card-header\">Edit User Profile </h4>\r\n  <form (ngSubmit)=\"update(editUserForm)\" #editUserForm=\"ngForm\">\r\n\r\n    <div *ngIf=\"invalidUserEdit\" class=\"alert alert-danger\">\r\n      <span class=\"alert alert-danger\">{{ errorMessage }}</span>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"inputName\">Name</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"name\" [(ngModel)]=\"person.name\" placeholder=\"Name\">\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-md-6\">\r\n        <label for=\"inputEmail4\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" name=\"email\" [(ngModel)]=\"person.email\" placeholder=\"Email\">\r\n      </div>\r\n      <div class=\"form-group col-md-6\">\r\n        <label for=\"inputPassword4\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" name=\"password\" [(ngModel)]=\"person.password\"  placeholder=\"Password\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <div class=\"col-md-6 mb-3\">\r\n        <label for=\"validationDefault03\">Phone</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"validationDefault03\" name=\"phone\" [(ngModel)]=\"person.phone\" placeholder=\"Phone\" required>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"inputAddress\">Address</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputAddress\" name=\"address.street\" [(ngModel)]=\"person.address.street\" placeholder=\"1234 Main St\">\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-md-6\">\r\n        <label for=\"inputCity\">City</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"inputCity\" name=\"address.city\" [(ngModel)]=\"person.address.city\">\r\n      </div>\r\n      <div class=\"form-group col-md-4\">\r\n        <label for=\"inputState\">State</label>\r\n        <select id=\"inputState\" class=\"form-control\" name=\"address.state\" [(ngModel)]=\"person.address.state\">\r\n          <option selected>Choose...</option>\r\n          <option *ngFor=\"let state of states\">{{state}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group col-md-2\">\r\n        <label for=\"inputZip\">Zip</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"inputZip\" name=\"address.zip\" [(ngModel)]=\"person.address.zip\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\">\r\n        <label class=\"form-check-label\" for=\"gridCheck\">\r\n          Check me out\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editUserForm.form.valid\">Edit</button>\r\n    <button type=\"button\" class=\"btn btn-outline-primary\" style=\"margin-left:10px;\" (click)=\"backClicked()\">Back</button>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EditUserComponent } from './edit-user.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\n\nconst routes: Routes = [\n  { path: '', component: EditUserComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    FlexLayoutModule\n  ],\n  declarations: [EditUserComponent]\n})\nexport class EditUserModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../_services';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  invalidLogin: boolean;\n  submitted = false;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  signIn(credentials) {\n    this.submitted = true;\n    //console.log(\"Login submited\")\n    this.authService.login(credentials)\n      .subscribe(result => {\n        console.log(result)\n        if (result)\n          this.router.navigate(['/dashboard']);\n        else\n          this.invalidLogin = true;\n      },\n        error => { this.invalidLogin = true; } // error path\n      );\n  }\n}\n","<div class=\"card mt-4\">\r\n  <div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <form #signinForm=\"ngForm\" (ngSubmit)=\"signIn(signinForm.value)\">\r\n      <h2 class=\"form-signin-heading\">Please sign in</h2>\r\n      <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\r\n        <span class=\"alert alert-danger\">Invalid username and/or password.</span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"inputEmail1\">Email address</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail1\" name=\"email\" ngModel aria-describedby=\"emailHelp\" placeholder=\"Enter email\" required autofocus>\r\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"exampleInputPassword1\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" ngModel placeholder=\"Password\" required>\r\n      </div>\r\n      <div class=\"form-check\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n        <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n      </div>\r\n      <button type=\"submit\" id=\"login\" class=\"btn btn-primary\" [disabled]=\"!signinForm.form.valid\">Login</button>\r\n      <a class=\"btn btn-outline-primary\" href=\"/signup\" style=\"margin-left:10px;\">Signup</a>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\n\r\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    LoginRoutingModule,\n    FlexLayoutModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { User, Address } from '../../_models';\r\nimport { SignupService } from '../../_services';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  invalidSignup: boolean;\n  person: User\n  public states: String[] = ['Delhi','Mumbai','Kolkata','Bangalore'];\n\n  constructor(private router: Router, private signupService: SignupService) { }\n\n  ngOnInit(): void {\n    this.person = new User()\n    this.person.address = new Address()\n  }\n\n  save() {    \r\n    this.signupService.save(this.person)\n      .subscribe(result => {\n        if (result)\n          this.router.navigate(['/login']);\n        else\n          this.invalidSignup = true;\n      });\r\n  }\n\n}\n","<div class=\"card mt-4\">\r\n  <h4 class=\"card-header\">Please sign up</h4>\r\n  <form (ngSubmit)=\"save()\" #signUpForm=\"ngForm\">\r\n    <div *ngIf=\"invalidSignup\" class=\"alert alert-danger\">\r\n      <span class=\"alert alert-danger\">Error !!</span>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"inputName\">Name</label>\r\n      <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"person.name\" placeholder=\"Name\">\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-md-6\">\r\n        <label for=\"inputEmail4\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" name=\"email\" [(ngModel)]=\"person.email\" placeholder=\"Email\">\r\n      </div>\r\n      <div class=\"form-group col-md-6\">\r\n        <label for=\"inputPassword4\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" name=\"password\" [(ngModel)]=\"person.password\" placeholder=\"Password\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <div class=\"col-md-6 mb-3\">\r\n        <label for=\"validationDefault03\">Phone</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"validationDefault03\" name=\"phone\" [(ngModel)]=\"person.phone\" placeholder=\"Phone\" required>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"inputAddress\">Address</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputAddress\" name=\"address\" [(ngModel)]=\"person.address.street\" placeholder=\"1234 Main St\">\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-md-6\">\r\n        <label for=\"inputCity\">City</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"inputCity\" name=\"city\" [(ngModel)]=\"person.address.city\">\r\n      </div>\r\n      <div class=\"form-group col-md-4\">\r\n        <label for=\"inputState\">State</label>\r\n        <select id=\"inputState\" class=\"form-control\" name=\"state\" [(ngModel)]=\"person.address.state\">\r\n          <option selected>Choose...</option>\r\n          <option *ngFor=\"let state of states\">{{state}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group col-md-2\">\r\n        <label for=\"inputZip\">Zip</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"inputZip\" name=\"zip\" [(ngModel)]=\"person.address.zip\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\">\r\n        <label class=\"form-check-label\" for=\"gridCheck\">\r\n          Check me out\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!signUpForm.form.valid\">Sign in</button>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupComponent } from './signup.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\n\nconst routes: Routes = [\n  { path: '', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    FlexLayoutModule\n  ],\n  declarations: [SignupComponent]\n})\nexport class SignupModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer-only-layout',\n  templateUrl: './footer-only-layout.component.html',\n  styleUrls: ['./footer-only-layout.component.css']\n})\nexport class FooterOnlyLayoutComponent implements OnInit {\n\n  constructor() {\n    console.log('Footer only layout constructor called');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\r\n  <a class=\"navbar-brand\" href=\"#\">\r\n    <img src=\"/assets/images/logo.png\" alt=\"\">\r\n  </a>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div class=\"container\">\r\n    <app-footer></app-footer>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() {\n    console.log('Footer constructor called');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","\r\n  <div class=\"card mt-4\">\r\n    <div class=\"copyright\">\r\n      &copy; Copyright <strong><span>FoodStore</span></strong>. All Rights Reserved\r\n    </div>\r\n    <div class=\"credits\">\r\n          Designed by <a href=\"\">@Subhajit</a>\r\n    </div>\r\n  </div>\r\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../_services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router,private _authService: AuthService) {\n    console.log('Header constructor called');\n  }\n\n  ngOnInit() {\n  }\n  get authService() { return this._authService }\n\n  isLoggedIn() {\n    return this._authService.isLoggedIn();\r\n  }\n  logout() {\n    //this._authService.logout()\n    //this.router.navigate(['/login']);\n\n    //console.log(\"Login submited\")\n    this.authService.logout()\n      .subscribe(result => {           \n        this.router.navigate(['/login']);        \n      },\n        error => {\n          //this.invalidLogin = true;\n          console.log(\"Logout error!!\")\n        } // error path\n      );\n  }\n}\n","<div class=\"card mt-4\">\r\n\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img src=\"/assets/images/logo.png\" alt=\"\">\r\n    </a>\r\n    <a class=\"navbar-brand\" href=\"/edit-user\" *ngIf=\"authService.isLoggedIn()\">\r\n      <span class=\"badge badge-pill badge-success\">{{ authService.getLoginUserName() }}</span>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <button class=\"btn btn-outline-secondary\" type=\"submit\" (click)=\"logout()\">Logout</button>\r\n        </li>\r\n      </ul>\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FooterOnlyLayoutComponent } from './footer-only-layout/footer-only-layout.component';\r\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\r\nimport { LoginModule } from '../common/login/login.module';\r\nimport { SignupModule } from '../common/signup/signup.module';\r\nimport { DashboardModule } from '../common/dashboard/dashboard.module';\r\nimport { AuthGuard } from '../_helpers/auth-guard/auth-guard.service';\r\nimport { EditUserModule } from '../common/edit-user/edit-user.module';\r\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      { path: 'dashboard', loadChildren: () => DashboardModule, canActivate: [AuthGuard] },\n      { path: 'edit-user', loadChildren: () => EditUserModule, canActivate: [AuthGuard] },\n      { path: 'account-settings', loadChildren: '../account-settings/account-settings.module#AccountSettingsModule' },\n    ]\n  },\n  {\n    path: '',\n    component: FooterOnlyLayoutComponent,\n    children: [\n      { path: 'login', loadChildren: () => LoginModule },\n      { path: 'signup', loadChildren: () => SignupModule }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LayoutRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { FooterOnlyLayoutComponent } from './footer-only-layout/footer-only-layout.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {LayoutRoutingModule} from './layout-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutRoutingModule,\n    FlexLayoutModule\n  ],\n  exports: [],\n  declarations: [\n    MainLayoutComponent,\n    FooterOnlyLayoutComponent,\n    FooterComponent,\n    HeaderComponent    \n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() {\n    console.log('Main layout constructor called');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\r\n  <div class=\"container\">\r\n    <app-header></app-header>\r\n  </div>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div class=\"container\">\r\n    <app-footer></app-footer>\r\n  </div>\r\n</div>\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}